							

								MODULE -9 : WORKING WITH PANDAS

1. Create a series of three different colors.
import numpy as np
import pandas as pd
codes = ["RED" , "GREEN" , "BLUE"]
series_1 = pd.Series(codes)
print(series_1)


2. View the series of different colors.
import matplotlib.pyplot as plt
plt.figure(figsize = (8,6))
plt.bar(series_1.index , len(codes) , color = codes, width = 0.4 , alpha =1)
plt.title("Color Codes View")
plt.xticks(rotation = 45)
plt.yticks([])


3. Create a series of three different car types and view it.
Cars = {"TATA":10, "HYUNDAI" : 20 , "MARUTI":25}
series_2 = pd.Series(Cars)
plt.bar(series_2.index , series_2.values , color = "skyblue", width =0.5)
plt.xticks(rotation =45)


4. Combine the Series of cars and colors into a Data Frame.
series1 = pd.Series(["TATA" , "HYUNDAI", "MARUTI"])
series2 = pd.Series(["RED", "GREEN", "BLUE"])
df = pd.DataFrame({"Cars": series1 , "Colour": series2})
df


5. Find the different datatypes of the car data Data Frame.
print(df.dtypes)


6. Describe your current car sales Data Frame using describe ().
Cars_Data = {"Name": ["Tata" ,"Hyundai" , "Maruti" , "Mahindra" , "Nissan"],
             "Color": ["Red" ,"Blue" , "White" , "Black" , "Grey"],
            "Prices": [1000000 , 1200000,1400000,600000,1800000],
            "Sales": [49000,55000,18000,56000,340000],
             "Maintenanace_cost" :[3000,5000,8000,2000,1050],
             "Mileage":[19,15,17,16,16]}
df = pd.DataFrame(Cars_Data)
df["Sales"].describe()
count         5.000000
mean     103600.000000
std      133061.264085
min       18000.000000
25%       49000.000000
50%       55000.000000
75%       56000.000000
max      340000.000000
Name: Sales, dtype: float64


7. Get information about your Data Frame using info ().
df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 5 entries, 0 to 4
Data columns (total 6 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   Name               5 non-null      object
 1   Color              5 non-null      object
 2   Prices             5 non-null      int64 
 3   Sales              5 non-null      int64 
 4   Maintenanace_cost  5 non-null      int64 
 5   Mileage            5 non-null      int64 
dtypes: int64(4), object(2)
memory usage: 372.0+ bytes


8. Create a Series of different numbers and find the mean of them.
new_series = pd.Series(np.random.uniform(100,size = 10))
print("NEW SERIES : ")
print(new_series)
result = new_series.mean()
print(f"The mean of above serie swill be : {result}")
NEW SERIES : 
0    15.049476
1    89.288148
2    35.393754
3    11.548684
4    53.033517
5    77.043913
6    53.141592
7    62.344464
8    92.491704
9     3.528217
dtype: float64
The mean of above serie swill be : 49.286346910214256


9. Create a Series of different numbers and find the sum of them.
print(f"The sum of series is : {new_series.sum()}")
The sum of series is : 492.8634691021426


10. List out all the column names of the car sales Data Frame .
print(df.columns.tolist())
['Name', 'Color', 'Prices', 'Sales', 'Maintenanace_cost', 'Mileage']


11. Find the length of the car sales Data Frame.
print(len(df))
5

12. Show the first 3 rows of the car sales Data Frame.
print(df.head(3))
      Name  Color   Prices  Sales  Maintenanace_cost  Mileage
0     Tata    Red  1000000  49000               3000       19
1  Hyundai   Blue  1200000  55000               5000       15
2   Maruti  White  1400000  18000               8000       17


13. Show the last 3 rows of the car sales Data Frame.
print(df.tail(3))
       Name  Color   Prices   Sales  Maintenanace_cost  Mileage
2    Maruti  White  1400000   18000               8000       17
3  Mahindra  Black   600000   56000               2000       16
4    Nissan   Grey  1800000  340000               1050       16


14. Use. loc to select the row at index 3 of the car sales Data Frame.
df.loc[3,["Sales"]]
Sales    56000
Name: 3, dtype: object

15. Use. iloc to select the row at position 3 of the car sales Data Frame.
print(df.iloc[3,3])
56000


16. Create a crosstab of the Make and Doors columns. 
data = { "make" : ["Toyota" , "Tata" , "Maruti","Tata","Toyota","Maruti"],
        "Doors" : [2,4,4,4,2,2]}
df = pd.DataFrame(data)
df_crosstab = pd.crosstab(df["make"],df["Doors"])
df_crosstab